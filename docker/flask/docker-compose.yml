version: '3.11'

services:
    flask:
        image: myflaskapp:latest
        build:
            context: ./flask
            dockerfile: Dockerfile
        environment:
            DB_HOST: postgres
            DB_USER_FILE: /run/secrets/db_user
            DB_PASSWORD_FILE: /run/secrets/db_password
            DB_NAME: mydb
            FLASK_ENV: ${FLASK_ENV:-production}
        secrets:
            - db_user
            - db_password
        networks:
            - backend
        volumes:
            - ./flask/app:/app/app
        deploy:
            resources:
                limits:
                    memory: 256M
                    cpus: '0.5'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:5000']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 5s
        labels:
            com.example.service: 'flask'

    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        networks:
            - backend
        depends_on:
            - flask
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost']
            interval: 30s
            timeout: 5s
            retries: 3
        labels:
            com.example.service: 'nginx'

    postgres:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: mydb
            POSTGRES_USER_FILE: /run/secrets/db_user
            POSTGRES_PASSWORD_FILE: /run/secrets/db_password
        secrets:
            - db_user
            - db_password
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U `cat /run/secrets/db_user` -d mydb']
            interval: 30s
            timeout: 5s
            retries: 5
        labels:
            com.example.service: 'postgres'
        deploy:
            resources:
                limits:
                    memory: 512M
                    cpus: '0.5'

secrets:
    db_user:
        file: ./secrets/db_user.txt
    db_password:
        file: ./secrets/db_password.txt

networks:
    backend:

volumes:
    postgres_data:
